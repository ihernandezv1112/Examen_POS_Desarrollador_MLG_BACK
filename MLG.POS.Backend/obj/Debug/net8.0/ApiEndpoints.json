[
  {
    "ContainingType": "MLG.POS.Backend.Controllers.ArticlesController",
    "Method": "AddClient",
    "RelativePath": "api/Articles/AddArticle",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "article",
        "Type": "MLG.POS.Backend.Core.Dtos.ArticleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.ArticlesController",
    "Method": "DeleteArticle",
    "RelativePath": "api/Articles/DeleteArticle",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.ArticlesController",
    "Method": "GetArticles",
    "RelativePath": "api/Articles/GetArticles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.ArticlesController",
    "Method": "UpdateArticle",
    "RelativePath": "api/Articles/UpdateArticle",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "article",
        "Type": "MLG.POS.Backend.Core.Dtos.ArticleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.ClientsController",
    "Method": "AddClient",
    "RelativePath": "api/Clients/AddClient",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "client",
        "Type": "MLG.POS.Backend.Core.Dtos.ClientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.ClientsController",
    "Method": "DeleteClient",
    "RelativePath": "api/Clients/DeleteClient",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.ClientsController",
    "Method": "GetClients",
    "RelativePath": "api/Clients/GetClients",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.ClientsController",
    "Method": "Login",
    "RelativePath": "api/Clients/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "login",
        "Type": "MLG.POS.Backend.Core.Entities.Login",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.ClientsController",
    "Method": "UpdateClient",
    "RelativePath": "api/Clients/UpdateClient",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "client",
        "Type": "MLG.POS.Backend.Core.Dtos.ClientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.StoresController",
    "Method": "AddStore",
    "RelativePath": "api/Stores/AddStore",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "store",
        "Type": "MLG.POS.Backend.Core.Dtos.StoreDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.StoresController",
    "Method": "DeleteStore",
    "RelativePath": "api/Stores/DeleteStore",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.StoresController",
    "Method": "GetStores",
    "RelativePath": "api/Stores/GetStores",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.StoresController",
    "Method": "UpdateStore",
    "RelativePath": "api/Stores/UpdateStore",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "store",
        "Type": "MLG.POS.Backend.Core.Dtos.StoreDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MLG.POS.Backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MLG.POS.Backend.WeatherForecast, MLG.POS.Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]